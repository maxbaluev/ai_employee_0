# CopilotKit Field Guide for ADK Integrations

This doc replaces the previous LangGraph-centric guide. It now describes CopilotKit usage with our ADK runtime.

## 1. Why CopilotKit + ADK
- CopilotKit supplies the mission intake UI, approvals, and generative surfaces.
- ADK orchestrates planner, executor, validator, and evidence agents.
- Together they deliver human-in-the-loop governance without LangGraph dependencies.

## 2. Getting Started
1. Deploy your ADK coordinator/executor services (see `new_docs/architecture.md`).
2. Expose REST endpoints for planner inputs, tool execution, triggers, and approvals.
3. Configure CopilotKit to hit those ADK endpoints:
   - `COPILOTKIT_API_URL`: points at ADK mission API.
   - `COPILOTKIT_APPROVAL_URL`: routes to ADK approval handler.
4. Mount the CopilotKit React components in `src/app/(control-plane)/`.

## 3. Human-in-the-loop Flow
```tsx
// Example Next.js server action
export async function submitMission(data: MissionPayload) {
  await fetch(`${process.env.ADK_BASE_URL}/missions`, {
    method: 'POST',
    headers: { 'content-type': 'application/json' },
    body: JSON.stringify(data),
  });
}

<CopilotKitProvider
  agentUrl="/api/copilotkit"
  onSubmit={submitMission}
  onApprove={({ missionId, decision }) =>
    fetch(`${process.env.ADK_BASE_URL}/missions/${missionId}/approval`, {
      method: 'POST',
      body: JSON.stringify(decision),
    })
  }
>
  <MissionComposer />
</CopilotKitProvider>
```

## 4. Trigger Notifications
- Use Composio trigger webhooks to push evidence updates into CopilotKit.
- ADK listens for trigger events, writes artifacts, and CopilotKit displays them in chat/evidence panels.

## 5. References
- `new_docs/architecture.md` sections 4 & 8.
- `new_docs/guardrail_policy_pack.md` for approval/undo expectations.
- Official CopilotKit docs for generic component APIs (ignore LangGraph guides).
